`{"kind":"Workflow","apiVersion":"argoproj.io/v1alpha1","metadata":{"name":"aws-lambda-delete-event-source-mapping-1658947438","namespace":"litmus","creationTimestamp":null,"labels":{"subject":"aws-lambda-delete-event-source-mapping_litmus"}},"spec":{"templates":[{"name":"custom-chaos","steps":[[{"name":"install-chaos-faults","template":"install-chaos-faults"}],[{"name":"lambda-delete-event-source-mapping-mgk","template":"lambda-delete-event-source-mapping-mgk"}],[{"name":"cleanup-chaos-resources","template":"cleanup-chaos-resources"}]]},{"name":"install-chaos-faults","inputs":{"artifacts":[{"name":"lambda-delete-event-source-mapping-mgk","path":"/tmp/lambda-delete-event-source-mapping-mgk.yaml","raw":{"data":"apiVersion: litmuschaos.io/v1alpha1\\ndescription:\\n  message: |\\n    Inject AWS lambda delete event source mapping for a certain chaos duration\\nkind: ChaosExperiment\\nmetadata:\\n  name: lambda-delete-event-source-mapping\\n  labels:\\n    name: lambda-delete-event-source-mapping\\n    app.kubernetes.io/part-of: litmus\\n    app.kubernetes.io/component: chaosexperiment\\n    app.kubernetes.io/version: ci\\nspec:\\n  definition:\\n    scope: Cluster\\n    permissions:\\n      - apiGroups:\\n          - \\"\\"\\n        resources:\\n          - pods\\n        verbs:\\n          - create\\n          - delete\\n          - get\\n          - list\\n          - patch\\n          - update\\n          - deletecollection\\n      - apiGroups:\\n          - \\"\\"\\n        resources:\\n          - events\\n        verbs:\\n          - create\\n          - get\\n          - list\\n          - patch\\n          - update\\n      - apiGroups:\\n          - \\"\\"\\n        resources:\\n          - secrets\\n          - configmaps\\n        verbs:\\n          - get\\n          - list\\n      - apiGroups:\\n          - \\"\\"\\n        resources:\\n          - pods/log\\n        verbs:\\n          - get\\n          - list\\n          - watch\\n      - apiGroups:\\n          - \\"\\"\\n        resources:\\n          - pods/exec\\n        verbs:\\n          - get\\n          - list\\n          - create\\n      - apiGroups:\\n          - batch\\n        resources:\\n          - jobs\\n        verbs:\\n          - create\\n          - list\\n          - get\\n          - delete\\n          - deletecollection\\n      - apiGroups:\\n          - litmuschaos.io\\n        resources:\\n          - chaosengines\\n          - chaosexperiments\\n          - chaosresults\\n        verbs:\\n          - create\\n          - list\\n          - get\\n          - patch\\n          - update\\n          - delete\\n      - apiGroups:\\n          - \\"\\"\\n        resources:\\n          - nodes\\n        verbs:\\n          - get\\n          - list\\n    image: chaosnative/chaos-go-runner:main-latest\\n    imagePullPolicy: Always\\n    args:\\n      - -c\\n      - ./experiments -name lambda-delete-event-source-mapping\\n    command:\\n      - /bin/bash\\n    env:\\n    - name: TOTAL_CHAOS_DURATION\\n      value: '30'\\n    - name: RAMP_TIME\\n      value: ''\\n    - name: FUNCTION_NAME\\n      value: ''\\n    - name: EVENT_UUIDS\\n      value: ''\\n    - name: REGION\\n      value: ''\\n    - name: SEQUENCE\\n      value: 'parallel'\\n    - name: AWS_SHARED_CREDENTIALS_FILE\\n      value: '/tmp/cloud_config.yml'\\n    labels:\\n      name: lambda-delete-event-source-mapping\\n      app.kubernetes.io/part-of: litmus\\n      app.kubernetes.io/component: experiment-job\\n      app.kubernetes.io/version: ci\\n    secrets:\\n      - name: cloud-secret\\n        mountPath: /tmp/\\n"}}]},"container":{"name":"","image":"docker.io/chaosnative/k8s:1.15.0","command":["sh","-c"],"args":["kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep 30"]}},{"name":"lambda-delete-event-source-mapping-mgk","inputs":{"artifacts":[{"name":"lambda-delete-event-source-mapping-mgk","path":"/tmp/chaosengine-lambda-delete-event-source-mapping-mgk.yaml","raw":{"data":"apiVersion: litmuschaos.io/v1alpha1\\nkind: ChaosEngine\\nmetadata:\\n  namespace: \\"{{workflow.parameters.adminModeNamespace}}\\"\\n  generateName: lambda-delete-event-source-mapping-mgk\\n  labels:\\n    instance_id: 3b589183-7d6f-402c-835c-6a0638c00b96\\n    workflow_name: lambda-delete-event-source-mapping-1658947438\\nspec:\\n  engineState: active\\n  chaosServiceAccount: litmus-admin\\n  experiments:\\n    - name: lambda-delete-event-source-mapping\\n      spec:\\n        components:\\n          env:\\n            - name: TOTAL_CHAOS_DURATION\\n              value: '30'\\n            - name: FUNCTION_NAME\\n              value: ''\\n            - name: EVENT_UUIDS\\n              value: ''\\n            - name: REGION\\n              value: ''\\n            - name: SEQUENCE\\n              value: 'parallel'\\n        probe:\\n          - name: healthcheck\\n            type: cmdProbe\\n            mode: SOT\\n            runProperties:\\n              probeTimeout: 5s\\n              retry: 0\\n              interval: 1s\\n              stopOnFailure: false\\n            cmdProbe/inputs:\\n              command: ./healthcheck -name aws-lambda-delete-event-source-mapping\\n              source:\\n                image: chaosnative/chaos-go-runner:main-latest\\n                inheritInputs: true\\n              comparator:\\n                type: string\\n                criteria: contains\\n                value: \\"[P000]\\"\\n"}}]},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"docker.io/chaosnative/litmus-checker:1.15.0","args":["-file=/tmp/chaosengine-lambda-delete-event-source-mapping-mgk.yaml","-saveName=/tmp/engine-name"]}},{"name":"cleanup-chaos-resources","container":{"name":"","image":"docker.io/chaosnative/k8s:1.15.0","command":["sh","-c"],"args":["kubectl delete chaosengine -l 'instance_id in (3b589183-7d6f-402c-835c-6a0638c00b96, )' -n {{workflow.parameters.adminModeNamespace}} "]}}],"entrypoint":"custom-chaos","arguments":{"parameters":[{"name":"adminModeNamespace","value":"litmus"}]},"serviceAccountName":"argo-chaos","podGC":{"strategy":"OnWorkflowCompletion"},"securityContext":{"runAsUser":1000,"runAsNonRoot":true}}}`
