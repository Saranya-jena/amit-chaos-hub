apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    infra_id: 86fb431c-011b-492e-b8db-102e3f00eb7d
    revision_id: 3c02def9-aeca-4c79-957f-4fb8393f0d3f
  name: pprof-test
  namespace: hce
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: hce
  entrypoint: demo-pprof-2
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: demo-pprof-2
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: container-kill-p7p
        template: container-kill-p7p
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep
        30
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: container-kill-p7p
        path: /tmp/container-kill-p7p.yaml
        raw:
          data: "apiVersion: litmuschaos.io/v1alpha1\ndescription:\n  message: |\n
            \   Kills a container belonging to an application pod \nkind: ChaosExperiment\nmetadata:\n
            \ name: container-kill\n  labels:\n    name: container-kill\n    app.kubernetes.io/part-of:
            litmus\n    app.kubernetes.io/component: chaosexperiment\n    app.kubernetes.io/version:
            ci\nspec:\n  definition:\n    scope: Namespaced\n    permissions:\n      -
            apiGroups:\n          - \"\"\n        resources:\n          - pods\n        verbs:\n
            \         - create\n          - delete\n          - get\n          - list\n
            \         - patch\n          - update\n          - deletecollection\n
            \     - apiGroups:\n          - \"\"\n        resources:\n          -
            events\n        verbs:\n          - create\n          - get\n          -
            list\n          - patch\n          - update\n      - apiGroups:\n          -
            \"\"\n        resources:\n          - configmaps\n        verbs:\n          -
            get\n          - list\n      - apiGroups:\n          - \"\"\n        resources:\n
            \         - pods/log\n        verbs:\n          - get\n          - list\n
            \         - watch\n      - apiGroups:\n          - \"\"\n        resources:\n
            \         - pods/exec\n        verbs:\n          - get\n          - list\n
            \         - create\n      - apiGroups:\n          - apps\n        resources:\n
            \         - deployments\n          - statefulsets\n          - replicasets\n
            \         - daemonsets\n        verbs:\n          - list\n          -
            get\n      - apiGroups:\n          - apps.openshift.io\n        resources:\n
            \         - deploymentconfigs\n        verbs:\n          - list\n          -
            get\n      - apiGroups:\n          - \"\"\n        resources:\n          -
            replicationcontrollers\n        verbs:\n          - get\n          - list\n
            \     - apiGroups:\n          - argoproj.io\n        resources:\n          -
            rollouts\n        verbs:\n          - list\n          - get\n      - apiGroups:\n
            \         - batch\n        resources:\n          - jobs\n        verbs:\n
            \         - create\n          - list\n          - get\n          - delete\n
            \         - deletecollection\n      - apiGroups:\n          - litmuschaos.io\n
            \       resources:\n          - chaosengines\n          - chaosexperiments\n
            \         - chaosresults\n        verbs:\n          - create\n          -
            list\n          - get\n          - patch\n          - update\n          -
            delete\n    image: chaosnative/go-runner:ci\n    imagePullPolicy: Always\n
            \   args:\n      - -c\n      - ./experiments -name container-kill\n    command:\n
            \     - /bin/bash\n    env:\n      - name: TARGET_CONTAINER\n        value:
            \"\"\n      - name: RAMP_TIME\n        value: \"\"\n      - name: LIB\n
            \       value: litmus\n      - name: TARGET_PODS\n        value: \"\"\n
            \     - name: CHAOS_INTERVAL\n        value: \"10\"\n      - name: SIGNAL\n
            \       value: SIGKILL\n      - name: SOCKET_PATH\n        value: /var/run/docker.sock\n
            \     - name: CONTAINER_RUNTIME\n        value: docker\n      - name:
            TOTAL_CHAOS_DURATION\n        value: \"20\"\n      - name: PODS_AFFECTED_PERC\n
            \       value: \"\"\n      - name: NODE_LABEL\n        value: \"\"\n      -
            name: DEFAULT_HEALTH_CHECK\n        value: \"false\"\n      - name: LIB_IMAGE\n
            \       value: chaosnative/go-runner:ci\n      - name: SEQUENCE\n        value:
            parallel\n    labels:\n      name: container-kill\n      app.kubernetes.io/part-of:
            litmus\n      app.kubernetes.io/component: experiment-job\n      app.kubernetes.io/runtime-api-usage:
            \"true\"\n      app.kubernetes.io/version: ci\n"
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-container-kill-p7p.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: container-kill-p7p
        path: /tmp/chaosengine-container-kill-p7p.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: container-kill-p7p
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: demo-pprof-2
            spec:
              engineState: active
              appinfo:
                appns: boutique
                applabel: app=adservice
                appkind: deployment
              chaosServiceAccount: litmus-admin
              experiments:
                - name: container-kill
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "20"
                        - name: CHAOS_INTERVAL
                          value: "10"
                        - name: CONTAINER_RUNTIME
                          value: docker
                        - name: SOCKET_PATH
                          value: /var/run/docker.sock
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: TARGET_CONTAINER
                          value: ""
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: Edge
                        runProperties:
                          probeTimeout: 180
                          retry: 0
                          interval: 1
                          stopOnFailure: true
                        cmdProbe/inputs:
                          command: ./healthcheck -name pod-level
                          source:
                            image: chaosnative/go-runner:ci
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
    metadata:
      labels:
        weight: "10"
    name: container-kill-p7p
    outputs: {}
status:
  finishedAt: null
  startedAt: null
