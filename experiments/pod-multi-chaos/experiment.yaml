apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    agent_id: 11e6f536-6f1c-4c11-bc14-6309da68ed10
    revision_id: 3b8478f3-83d8-4b86-b7e1-112e9cc8c131
  name: pod-multi-chaos
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: four-wfs
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: four-wfs
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: pod-delete-f4z
        template: pod-delete-f4z
    - - arguments: {}
        name: pod-cpu-hog-lks
        template: pod-cpu-hog-lks
    - - arguments: {}
        name: pod-network-loss-qao
        template: pod-network-loss-qao
    - - arguments: {}
        name: pod-network-latency-zpx
        template: pod-network-latency-zpx
  - container:
      args:
      - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep
        30
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-delete-f4z
        path: /tmp/pod-delete-f4z.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Deletes a pod belonging to a deployment/statefulset/daemonset
            kind: ChaosExperiment
            metadata:
              name: pod-delete
              labels:
                name: pod-delete
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-delete
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "15"
                  - name: RAMP_TIME
                    value: ""
                  - name: FORCE
                    value: "true"
                  - name: CHAOS_INTERVAL
                    value: "5"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: TARGET_PODS
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-delete
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: ci
      - name: pod-cpu-hog-lks
        path: /tmp/pod-cpu-hog-lks.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects cpu consumption on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-cpu-hog
              labels:
                name: pod-cpu-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-cpu-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: CPU_CORES
                    value: "1"
                  - name: CPU_LOAD
                    value: "100"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: LIB_IMAGE
                    value: chaosnative/go-runner:ci
                  - name: STRESS_IMAGE
                    value: alexeiled/stress-ng:latest-ubuntu
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: TARGET_PODS
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-cpu-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/runtime-api-usage: "true"
                  app.kubernetes.io/version: ci
      - name: pod-network-loss-qao
        path: /tmp/pod-network-loss-qao.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects network packet loss on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-network-loss
              labels:
                name: pod-network-loss
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-network-loss
                command:
                  - /bin/bash
                env:
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: LIB_IMAGE
                    value: chaosnative/go-runner:ci
                  - name: NETWORK_INTERFACE
                    value: eth0
                  - name: TC_IMAGE
                    value: gaiadocker/iproute2
                  - name: NETWORK_PACKET_LOSS_PERCENTAGE
                    value: "100"
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: TARGET_PODS
                    value: ""
                  - name: NODE_LABEL
                    value: ""
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: DESTINATION_IPS
                    value: ""
                  - name: DESTINATION_HOSTS
                    value: ""
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-network-loss
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/runtime-api-usage: "true"
                  app.kubernetes.io/version: ci
      - name: pod-network-latency-zpx
        path: /tmp/pod-network-latency-zpx.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects network latency on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-network-latency
              labels:
                name: pod-network-latency
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-network-latency
                command:
                  - /bin/bash
                env:
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: NETWORK_INTERFACE
                    value: eth0
                  - name: LIB_IMAGE
                    value: chaosnative/go-runner:ci
                  - name: TC_IMAGE
                    value: gaiadocker/iproute2
                  - name: NETWORK_LATENCY
                    value: "2000"
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: JITTER
                    value: "0"
                  - name: LIB
                    value: litmus
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: TARGET_PODS
                    value: ""
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: DESTINATION_IPS
                    value: ""
                  - name: DESTINATION_HOSTS
                    value: ""
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-network-latency
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/runtime-api-usage: "true"
                  app.kubernetes.io/version: ci
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-delete-f4z.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-delete-f4z
        path: /tmp/chaosengine-pod-delete-f4z.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              creationTimestamp: null
              generateName: pod-delete-f4z
              labels:
                workflow_name: four-wfs
                workflow_run_id: '{{ workflow.uid }}'
              namespace: '{{workflow.parameters.adminModeNamespace}}'
            spec:
              appinfo:
                appkind: deployment
                applabel: app=nginx
                appns: default
              chaosServiceAccount: litmus-admin
              components:
                runner:
                  resources: {}
              engineState: active
              experiments:
              - name: pod-delete
                spec:
                  components:
                    env:
                    - name: TOTAL_CHAOS_DURATION
                      value: "30"
                    - name: CHAOS_INTERVAL
                      value: "10"
                    - name: FORCE
                      value: "false"
                    - name: PODS_AFFECTED_PERC
                    resources: {}
                    statusCheckTimeouts: {}
                  probe:
                  - cmdProbe/inputs:
                      command: ./healthcheck -name pod-level
                      comparator:
                        criteria: contains
                        type: string
                        value: '[P000]'
                      source:
                        image: chaosnative/go-runner:ci
                        inheritInputs: true
                    httpProbe/inputs:
                      method:
                        get: {}
                        post: {}
                    k8sProbe/inputs: {}
                    mode: Edge
                    name: healthcheck
                    promProbe/inputs:
                      comparator: {}
                    runProperties:
                      interval: 1
                      probeTimeout: 180
                      stopOnFailure: true
                    type: cmdProbe
                  rank: 0
            status:
              engineStatus: ""
              experiments: null
    metadata:
      labels:
        weight: "8"
    name: pod-delete-f4z
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-cpu-hog-lks.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-cpu-hog-lks
        path: /tmp/chaosengine-pod-cpu-hog-lks.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              creationTimestamp: null
              generateName: pod-cpu-hog-lks
              labels:
                workflow_name: four-wfs
                workflow_run_id: '{{ workflow.uid }}'
              namespace: '{{workflow.parameters.adminModeNamespace}}'
            spec:
              appinfo:
                appkind: deployment
                applabel: app=nginx
                appns: default
              chaosServiceAccount: litmus-admin
              components:
                runner:
                  resources: {}
              engineState: active
              experiments:
              - name: pod-cpu-hog
                spec:
                  components:
                    env:
                    - name: TOTAL_CHAOS_DURATION
                      value: "60"
                    - name: CPU_CORES
                      value: "1"
                    - name: PODS_AFFECTED_PERC
                    - name: CONTAINER_RUNTIME
                      value: docker
                    - name: SOCKET_PATH
                      value: /var/run/docker.sock
                    resources: {}
                    statusCheckTimeouts: {}
                  probe:
                  - cmdProbe/inputs:
                      command: ./healthcheck -name pod-level
                      comparator:
                        criteria: contains
                        type: string
                        value: '[P000]'
                      source:
                        image: chaosnative/go-runner:ci
                        inheritInputs: true
                    httpProbe/inputs:
                      method:
                        get: {}
                        post: {}
                    k8sProbe/inputs: {}
                    mode: Edge
                    name: healthcheck
                    promProbe/inputs:
                      comparator: {}
                    runProperties:
                      interval: 1
                      probeTimeout: 180
                      stopOnFailure: true
                    type: cmdProbe
                  rank: 0
            status:
              engineStatus: ""
              experiments: null
    metadata:
      labels:
        weight: "4"
    name: pod-cpu-hog-lks
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-network-loss-qao.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-network-loss-qao
        path: /tmp/chaosengine-pod-network-loss-qao.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              creationTimestamp: null
              generateName: pod-network-loss-qao
              labels:
                workflow_name: four-wfs
                workflow_run_id: '{{ workflow.uid }}'
              namespace: '{{workflow.parameters.adminModeNamespace}}'
            spec:
              appinfo:
                appkind: deployment
                applabel: app=nginx
                appns: default
              chaosServiceAccount: litmus-admin
              components:
                runner:
                  resources: {}
              engineState: active
              experiments:
              - name: pod-network-loss
                spec:
                  components:
                    env:
                    - name: TOTAL_CHAOS_DURATION
                      value: "60"
                    - name: NETWORK_PACKET_LOSS_PERCENTAGE
                      value: "100"
                    - name: CONTAINER_RUNTIME
                      value: docker
                    - name: SOCKET_PATH
                      value: /var/run/docker.sock
                    - name: PODS_AFFECTED_PERC
                    resources: {}
                    statusCheckTimeouts: {}
                  probe:
                  - cmdProbe/inputs:
                      command: ./healthcheck -name pod-level
                      comparator:
                        criteria: contains
                        type: string
                        value: '[P000]'
                      source:
                        image: chaosnative/go-runner:ci
                        inheritInputs: true
                    httpProbe/inputs:
                      method:
                        get: {}
                        post: {}
                    k8sProbe/inputs: {}
                    mode: Edge
                    name: healthcheck
                    promProbe/inputs:
                      comparator: {}
                    runProperties:
                      interval: 1
                      probeTimeout: 180
                      stopOnFailure: true
                    type: cmdProbe
                  rank: 0
            status:
              engineStatus: ""
              experiments: null
    metadata:
      labels:
        weight: "6"
    name: pod-network-loss-qao
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-network-latency-zpx.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-network-latency-zpx
        path: /tmp/chaosengine-pod-network-latency-zpx.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              creationTimestamp: null
              generateName: pod-network-latency-zpx
              labels:
                workflow_name: four-wfs
                workflow_run_id: '{{ workflow.uid }}'
              namespace: '{{workflow.parameters.adminModeNamespace}}'
            spec:
              appinfo:
                appkind: deployment
                applabel: app=nginx
                appns: default
              chaosServiceAccount: litmus-admin
              components:
                runner:
                  resources: {}
              engineState: active
              experiments:
              - name: pod-network-latency
                spec:
                  components:
                    env:
                    - name: TOTAL_CHAOS_DURATION
                      value: "60"
                    - name: NETWORK_LATENCY
                      value: "2000"
                    - name: JITTER
                      value: "0"
                    - name: CONTAINER_RUNTIME
                      value: docker
                    - name: SOCKET_PATH
                      value: /var/run/docker.sock
                    - name: PODS_AFFECTED_PERC
                    resources: {}
                    statusCheckTimeouts: {}
                  probe:
                  - cmdProbe/inputs:
                      command: ./healthcheck -name pod-level
                      comparator:
                        criteria: contains
                        type: string
                        value: '[P000]'
                      source:
                        image: chaosnative/go-runner:ci
                        inheritInputs: true
                    httpProbe/inputs:
                      method:
                        get: {}
                        post: {}
                    k8sProbe/inputs: {}
                    mode: Edge
                    name: healthcheck
                    promProbe/inputs:
                      comparator: {}
                    runProperties:
                      interval: 1
                      probeTimeout: 180
                      stopOnFailure: true
                    type: cmdProbe
                  rank: 0
            status:
              engineStatus: ""
              experiments: null
    metadata:
      labels:
        weight: "2"
    name: pod-network-latency-zpx
    outputs: {}
status:
  finishedAt: null
  startedAt: null
