apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  name: push-test-lol
  namespace: hce
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: hce
  entrypoint: push-test-lol
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: push-test-lol
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: ecs-instance-stop-vwh
        template: ecs-instance-stop-vwh
      - arguments: {}
        name: node-taint-0ve
        template: node-taint-0ve
    - - arguments: {}
        name: pod-cpu-hog-4vb
        template: pod-cpu-hog-4vb
    - - arguments: {}
        name: vmware-vm-process-kill-8bl
        template: vmware-vm-process-kill-8bl
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep
        30
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: ecs-instance-stop-vwh
        path: /tmp/ecs-instance-stop-vwh.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                It injects ecs-instance-stop chaos on ECS cluster
            kind: ChaosExperiment
            metadata:
              name: ecs-instance-stop
              labels:
                name: ecs-instance-stop
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name ecs-instance-stop
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "30"
                  - name: RAMP_TIME
                    value: ""
                  - name: CHAOS_INTERVAL
                    value: "10"
                  - name: CLUSTER_NAME
                    value: ""
                  - name: REGION
                    value: ""
                  - name: EC2_INSTANCE_ID
                    value: ""
                  - name: AWS_SHARED_CREDENTIALS_FILE
                    value: /tmp/cloud_config.yml
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: ecs-instance-stop
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: ci
                secrets:
                  - name: cloud-secret
                    mountPath: /tmp/
      - name: node-taint-0ve
        path: /tmp/node-taint-0ve.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Taint the node where application pod is scheduled
            kind: ChaosExperiment
            metadata:
              name: node-taint
              labels:
                name: node-taint
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                      - pods/eviction
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - daemonsets
                    verbs:
                      - list
                      - get
                      - delete
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                      - patch
                      - update
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name node-taint
                command:
                  - /bin/bash
                env:
                  - name: TARGET_NODE
                    value: ""
                  - name: NODE_LABEL
                    value: ""
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: TAINTS
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                labels:
                  name: node-taint
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: ci
      - name: pod-cpu-hog-4vb
        path: /tmp/pod-cpu-hog-4vb.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects CPU consumption on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-cpu-hog
              labels:
                name: pod-cpu-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-cpu-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: CPU_CORES
                    value: "1"
                  - name: CPU_LOAD
                    value: "100"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB_IMAGE
                    value: chaosnative/go-runner:ci
                  - name: STRESS_IMAGE
                    value: alexeiled/stress-ng:latest-ubuntu
                  - name: CONTAINER_RUNTIME
                    value: containerd
                  - name: SOCKET_PATH
                    value: /run/containerd/containerd.sock
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: TARGET_PODS
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-cpu-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/runtime-api-usage: "true"
                  app.kubernetes.io/version: ci
      - name: vmware-vm-process-kill-8bl
        path: /tmp/vmware-vm-process-kill-8bl.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                It kills a process in a VMware instance for a certain chaos duration.
            kind: ChaosExperiment
            metadata:
              name: vmware-vm-process-kill
              labels:
                name: vmware-vm-process-kill
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: chaosnative/go-runner:ci
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name vmware-process-kill
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "30"
                  - name: CHAOS_INTERVAL
                    value: "10"
                  - name: RAMP_TIME
                    value: ""
                  - name: GOVC_URL
                    valueFrom:
                      secretKeyRef:
                        name: vcenter-secret
                        key: VCENTERSERVER
                  - name: GOVC_USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: vcenter-secret
                        key: VCENTERUSER
                  - name: GOVC_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: vcenter-secret
                        key: VCENTERPASS
                  - name: GOVC_INSECURE
                    value: "true"
                  - name: VM_NAME
                    value: ""
                  - name: VM_USER_NAME
                    value: ""
                  - name: VM_PASSWORD
                    value: ""
                  - name: PROCESS_IDS
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                labels:
                  name: vmware-vm-process-kill
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: ci
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-ecs-instance-stop-vwh.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: ecs-instance-stop-vwh
        path: /tmp/chaosengine-ecs-instance-stop-vwh.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: push-test-lol
              generateName: ecs-instance-stop-vwh
            spec:
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: ecs-instance-stop
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "30"
                        - name: RAMP_TIME
                          value: ""
                        - name: CHAOS_INTERVAL
                          value: "10"
                        - name: CLUSTER_NAME
                          value: ""
                        - name: REGION
                          value: ""
                        - name: EC2_INSTANCE_ID
                          value: ""
                        - name: AWS_SHARED_CREDENTIALS_FILE
                          value: /tmp/cloud_config.yml
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                        - name: SEQUENCE
                          value: parallel
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: SOT
                        runProperties:
                          probeTimeout: 5000
                          retry: 0
                          interval: 1
                          stopOnFailure: true
                        cmdProbe/inputs:
                          command: ./healthcheck -name aws-ecs-instance-stop
                          source:
                            image: chaosnative/go-runner:ci
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
    metadata:
      labels:
        weight: "10"
    name: ecs-instance-stop-vwh
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-node-taint-0ve.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: node-taint-0ve
        path: /tmp/chaosengine-node-taint-0ve.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: push-test-lol
              generateName: node-taint-0ve
            spec:
              engineState: active
              auxiliaryAppInfo: ""
              chaosServiceAccount: litmus-admin
              experiments:
                - name: node-taint
                  spec:
                    components:
                      env:
                        - name: TARGET_NODE
                          value: ""
                        - name: NODE_LABEL
                          value: ""
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: RAMP_TIME
                          value: ""
                        - name: TAINTS
                          value: ""
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: Edge
                        runProperties:
                          probeTimeout: 180000
                          retry: 0
                          interval: 1
                          stopOnFailure: true
                        cmdProbe/inputs:
                          command: ./healthcheck -name node-level
                          source:
                            image: chaosnative/go-runner:ci
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
    metadata:
      labels:
        weight: "10"
    name: node-taint-0ve
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-cpu-hog-4vb.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-cpu-hog-4vb
        path: /tmp/chaosengine-pod-cpu-hog-4vb.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: push-test-lol
              generateName: pod-cpu-hog-4vb
            spec:
              engineState: active
              appinfo:
                appns: ""
                applabel: ""
                appkind: ""
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-cpu-hog
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: CPU_CORES
                          value: "1"
                        - name: CPU_LOAD
                          value: "100"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: RAMP_TIME
                          value: ""
                        - name: LIB_IMAGE
                          value: chaosnative/go-runner:ci
                        - name: STRESS_IMAGE
                          value: alexeiled/stress-ng:latest-ubuntu
                        - name: CONTAINER_RUNTIME
                          value: containerd
                        - name: SOCKET_PATH
                          value: /run/containerd/containerd.sock
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                        - name: NODE_LABEL
                          value: ""
                        - name: SEQUENCE
                          value: parallel
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: Edge
                        runProperties:
                          probeTimeout: 180000
                          retry: 0
                          interval: 1
                          stopOnFailure: true
                        cmdProbe/inputs:
                          command: ./healthcheck -name pod-level
                          source:
                            image: chaosnative/go-runner:ci
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
    metadata:
      labels:
        weight: "10"
    name: pod-cpu-hog-4vb
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-vmware-vm-process-kill-8bl.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: vmware-vm-process-kill-8bl
        path: /tmp/chaosengine-vmware-vm-process-kill-8bl.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: push-test-lol
              generateName: vmware-vm-process-kill-8bl
            spec:
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: vmware-vm-process-kill
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "30"
                        - name: CHAOS_INTERVAL
                          value: "10"
                        - name: RAMP_TIME
                          value: ""
                        - name: GOVC_URL
                        - name: GOVC_USERNAME
                        - name: GOVC_PASSWORD
                        - name: GOVC_INSECURE
                          value: "true"
                        - name: VM_NAME
                          value: ""
                        - name: VM_USER_NAME
                          value: ""
                        - name: VM_PASSWORD
                          value: ""
                        - name: PROCESS_IDS
                          value: ""
                        - name: SEQUENCE
                          value: parallel
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: SOT
                        runProperties:
                          probeTimeout: 5000
                          retry: 0
                          interval: 1
                          stopOnFailure: true
                        cmdProbe/inputs:
                          command: ./healthcheck -name vmware-process-kill
                          source:
                            image: chaosnative/go-runner:ci
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
    metadata:
      labels:
        weight: "10"
    name: vmware-vm-process-kill-8bl
    outputs: {}
status:
  finishedAt: null
  startedAt: null
