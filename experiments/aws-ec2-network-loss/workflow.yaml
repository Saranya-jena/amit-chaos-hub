kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: ec2-network-loss-1661585794
  namespace: litmus
  labels:
    subject: ec2-network-loss_litmus
spec:
  templates:
    - name: custom-chaos
      steps:
        - - name: install-chaos-experiments
            template: install-chaos-experiments
        - - name: ec2-network-loss-qu8
            template: ec2-network-loss-qu8
        - - name: revert-chaos
            template: revert-chaos
    - name: install-chaos-experiments
      inputs:
        artifacts:
          - name: ec2-network-loss-qu8
            path: /tmp/ec2-network-loss-qu8.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    It injects ec2-network-loss chaos on ec2 instance for certain chaos duration
                kind: ChaosExperiment

                metadata:
                  name: ec2-network-loss
                  labels:
                    name: ec2-network-loss
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: ci
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: chaosnative/go-runner:ci
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name ec2-network-loss
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "30"
                      - name: RAMP_TIME
                        value: ""
                      - name: CHAOS_INTERVAL
                        value: "10"
                      - name: LIB
                        value: litmus
                      - name: AWS_SHARED_CREDENTIALS_FILE
                        value: /tmp/cloud_config.yml
                    labels:
                      name: ec2-network-loss
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: ci
                    secrets:
                      - name: cloud-secret
                        mountPath: /tmp/
      container:
        name: ""
        image: chaosnative/k8s:2.13.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/ec2-network-loss-qu8.yaml -n
            {{workflow.parameters.adminModeNamespace}} &&  sleep 30
    - name: ec2-network-loss-qu8
      inputs:
        artifacts:
          - name: ec2-network-loss-qu8
            path: /tmp/chaosengine-ec2-network-loss-qu8.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: ec2-network-loss-qu8
                  labels:
                    instance_id: a12e3070-c8fe-48f6-b805-4ced081877e4
                    workflow_name: ec2-network-loss-1661585794
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: ec2-network-loss
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "10"
                            - name: REGION
                              value: ""
                            - name: EC2_INSTANCE_ID
                              value: ""
                            - name: NETWORK_PACKET_LOSS_PERCENTAGE
                              value: "100"
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: DESTINATION_IPS
                              value: ""
                            - name: SEQUENCE
                              value: parallel
                        probe: []
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: chaosnative/litmus-checker:2.13.0
        args:
          - -file=/tmp/chaosengine-ec2-network-loss-qu8.yaml
          - -saveName=/tmp/engine-name
    - name: revert-chaos
      container:
        name: ""
        image: chaosnative/k8s:2.13.0
        command:
          - sh
          - -c
        args:
          - "kubectl delete chaosengine -l 'instance_id in
            (a12e3070-c8fe-48f6-b805-4ced081877e4, )' -n
            {{workflow.parameters.adminModeNamespace}} "
  entrypoint: custom-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
status:
  ? startedAt
  ? finishedAt
