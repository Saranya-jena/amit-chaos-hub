apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  name: tetetetetteee
  namespace: hce
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: hce
  entrypoint: tetetetetteee
  imagePullSecrets:
  - name: test
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: tetetetetteee
    outputs: {}
    steps:
    - - arguments: {}
        name: nginx-chaos-izl
        template: nginx-chaos-izl
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: docker.io/harness/chaos-go-runner:1.44.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-nginx-chaos-izl.yaml
      - -saveName=/tmp/engine-name
      command:
      - ./chaos-checker
      image: docker.io/harness/chaos-go-runner:1.44.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: nginx-chaos-izl
        path: /tmp/chaosengine-nginx-chaos-izl.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: tetetetetteee
              annotations:
                probeRef: '[{"probeID":"default-harness-k8s-system-cmd-probe","mode":"SOT"}]'
              generateName: nginx-chaos-izl
            spec:
              appinfo:
                appns: hce
                applabel: app=chaos-exporter
                appkind: deployment
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-delete
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "30"
                        - name: CHAOS_INTERVAL
                          value: "10"
                        - name: FORCE
                          value: "false"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                      experimentImagePullSecrets:
                        - name: test
                      securityContext:
                        podSecurityContext:
                          runAsUser: 2000
                          runAsGroup: 0
              jobCleanUpPolicy: delete
              components:
                runner:
                  imagePullSecrets:
                    - name: test
    metadata:
      labels:
        weight: "10"
    name: nginx-chaos-izl
    outputs: {}
status:
  finishedAt: null
  startedAt: null
